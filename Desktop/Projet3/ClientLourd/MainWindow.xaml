<Window x:Class="ClientLourd.MainWindow"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:views="clr-namespace:ClientLourd.Views"
        xmlns:local="clr-namespace:ClientLourd"
        xmlns:converter="clr-namespace:ClientLourd.Utilities.Converters"
        xmlns:controls="clr-namespace:ClientLourd.Views.Controls"
        xmlns:game="clr-namespace:ClientLourd.Views.Controls.Game"
        xmlns:viewModels="clr-namespace:ClientLourd.ViewModels"
        Name="PolyDraw"
        mc:Ignorable="d"
        xmlns:enum="clr-namespace:ClientLourd.Utilities.Enums"
        WindowState="Maximized"
        Title="PolyDraw">
    <Window.DataContext>
        <viewModels:MainViewModel x:Name="ViewModel" />
    </Window.DataContext>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="VisibleIfTrueConverter"/>
        <converter:BoolToVisibilityConverter x:Key="VisibleIfFalseConverter" TrueValue="Collapsed" FalseValue="Visible"/>
        <converter:MultiBindingConverter x:Key="MultiBindingConverter" />
        <converter:ToggleVisibilityConverter x:Key="ToggleVisibilityConverter" />
        <converter:ContainedViewVisibilityConverter x:Key="ContainedViewVisibilityConverter"/>
        <converter:NotificationConverter x:Key="NotificationConverter"/>
        <converter:ComparatorToVisibilityConverter x:Key="ComparatorToVisibilityConverter"/>
        <converter:EnumTranslationConverter x:Key="EnumTranslationConverter"/>

    </Window.Resources>

    <materialDesign:DialogHost Identifier="Default" x:Name="MainWindowDialogHost" CloseOnClickAway="False" SizeChanged="MainGrid_SizeChanged">
            <materialDesign:DialogHost.LayoutTransform>
                    <ScaleTransform 
                                    CenterX="0"
                                    CenterY="0"
                                    ScaleX="{Binding ElementName=PolyDraw, Path=ScaleValue}"
                                    ScaleY="{Binding ElementName=PolyDraw, Path=ScaleValue}" />
            </materialDesign:DialogHost.LayoutTransform>
        <Grid>
            <WrapPanel ZIndex="1"
                       Visibility="{Binding IsWaiting, Converter={StaticResource BooleanToVisibilityConverter}}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center">
                <ProgressBar
                    Height="50"
                    Width="50"
                    Style="{StaticResource MaterialDesignCircularProgressBar}"
                    Value="0"
                    IsIndeterminate="True" />
            </WrapPanel>
            <DockPanel Name="MainDockPanel"
                       Visibility="{Binding ElementName=LoginScreen, Path=DataContext.IsLoggedIn, Converter={StaticResource VisibleIfTrueConverter}}">
                <materialDesign:ColorZone DockPanel.Dock="Top" Mode="PrimaryMid">
                    <!-- Menu bar-->
                    <DockPanel>
                        <!-- Hamburger menu toggle -->
                        <ToggleButton DockPanel.Dock="Left"
                                      Visibility="{Binding ElementName=LeaveButton, Path=Visibility, Converter={StaticResource ToggleVisibilityConverter}}"
                                      Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                      HorizontalAlignment="Right" Margin="16"
                                      Name="MenuToggleButton">
                        </ToggleButton>
                        <!--Back arrow for lobbies and game-->
                        <materialDesign:PackIcon
                            Foreground="{StaticResource MaterialDesignDarkForeground}"
                            Kind="ArrowLeft"
                            Height="36"
                            Width="36"
                            Background="{StaticResource PrimaryHueMidBrush}"
                            DockPanel.Dock="Left"
                            Name="LeaveButton"
                            Visibility="{Binding ContainedView, Converter={StaticResource ContainedViewVisibilityConverter}, ConverterParameter='Lobby'}"
                            ToolTip="{DynamicResource LeaveLobby}"
                            Margin="16"
                            Cursor="Hand"
                            MouseUp="LeaveLobby"
                       />

                        <!-- Use for hiding the button when the chat is export-->
                        <Grid DockPanel.Dock="Right"
                              Visibility="{Binding ElementName=ChatToggleButton, Path=IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <!-- Badge and button -->
                            <materialDesign:Badged
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                BadgePlacementMode="BottomLeft"
                                Name="NotificationCounter"
                                Visibility="{Binding ElementName=ChatToggleButton, Path=IsChecked, Converter={StaticResource InverseBoolToVisConverter}}"
                                BadgeBackground="{StaticResource SecondaryAccentBrush}"
                                Badge="{Binding ElementName=ChatBox, Path=DataContext.NewMessages, Converter={StaticResource NotificationConverter},  UpdateSourceTrigger=PropertyChanged}">

                                <ToggleButton
                                    Name="ChatToggleButton"
                                    ToolTip="{DynamicResource OpenChat}"
                                    Checked="ChatToggleButton_OnChecked"
                                    Unchecked="ChatToggleButton_OnChecked"
                                    Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}">
                                    <ToggleButton.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Export as a new window" Click="ExportChatAsNewWindow" />
                                        </ContextMenu>
                                    </ToggleButton.ContextMenu>
                                    <materialDesign:PackIcon
                                        Foreground="{StaticResource MaterialDesignDarkForeground}"
                                        Kind="Chat"
                                        Height="24"
                                        Width="24" />

                                </ToggleButton>
                            </materialDesign:Badged>

                            <!-- button without badge -->
                            <ToggleButton
                                Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}"
                                IsChecked="{Binding ElementName=Drawer, Path=IsRightDrawerOpen}"
                                Visibility="{Binding ElementName=NotificationCounter, Path=Visibility, Converter={StaticResource ToggleVisibilityConverter}}">
                                <materialDesign:PackIcon
                                    Kind="Chat"
                                    Height="24"
                                    Width="24" />
                            </ToggleButton>
                        </Grid>

                        <!--Sound button-->
                        <Grid DockPanel.Dock="Right">

                            

                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon
                                    Cursor="Hand"
                                    Background="{StaticResource PrimaryHueMidBrush}"
                                    Margin="0 0 20 0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    Kind="QuestionMarkCircle"
                                    Height="24"
                                    Width="24"
                                    ToolTip="{DynamicResource OpenTutorial}"

                                    PreviewMouseLeftButtonDown="OpenTutorial">
                                </materialDesign:PackIcon>




                                <ComboBox 
                                    x:Name="LanguageSelector" 
                                    FontSize="17"
                                    ItemsSource="{Binding Languages}"  
                                    SelectedItem="{Binding SelectedLanguage, UpdateSourceTrigger=PropertyChanged}"
                                    Margin="0 0 20 0"
                                    Visibility="{Binding ElementName=LobbyContainer, Path=Visibility, Converter={StaticResource ToggleVisibilityConverter}}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource EnumTranslationConverter}}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>


                                <materialDesign:PackIcon
                                    Visibility="{Binding Path=SoundService.SoundIsOn, Converter={StaticResource VisibleIfTrueConverter}}"
                                    Cursor="Hand"
                                    Background="{StaticResource PrimaryHueMidBrush}"
                                    Margin="0 0 20 0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    Kind="VolumeHigh"
                                    Height="24"
                                    Width="24">
                                    <materialDesign:PackIcon.InputBindings>
                                        <MouseBinding Gesture="LeftClick" 
                                        Command="{Binding Path=ToggleSoundCommand}"/>
                                        <MouseBinding Gesture="LeftDoubleClick" 
                                        Command="{Binding Path=ToggleSoundCommand}"/>

                                    </materialDesign:PackIcon.InputBindings>
                                </materialDesign:PackIcon>


                                <materialDesign:PackIcon
                                    Visibility="{Binding Path=SoundService.SoundIsOn, Converter={StaticResource VisibleIfFalseConverter}}"
                                    Margin="0 0 20 0"
                                    Cursor="Hand"
                                    Background="{StaticResource PrimaryHueMidBrush}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Foreground="{StaticResource MaterialDesignDarkForeground}"
                                    Kind="VolumeOff"
                                    Height="24"
                                    Width="24">
                                    <materialDesign:PackIcon.InputBindings>
                                        <MouseBinding Gesture="LeftClick" 
                                        Command="{Binding Path=ToggleSoundCommand}"/>
                                        <MouseBinding Gesture="LeftDoubleClick" 
                                        Command="{Binding Path=ToggleSoundCommand}"/>
                                    </materialDesign:PackIcon.InputBindings>
                                </materialDesign:PackIcon>
                            </StackPanel>
                        </Grid>

                        <Image Stretch="Uniform" HorizontalAlignment="Center" Height="60"
                               Source="Resources/WhiteLogo.png" />
                    </DockPanel>
                </materialDesign:ColorZone>
                
                <!--Drawers-->
                <materialDesign:DrawerHost
                    x:Name="Drawer"
                    IsRightDrawerOpen="{Binding ElementName=ChatToggleButton, Path=IsChecked }"
                    IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">

                    <Grid Name="ControlSelector">

                        <DockPanel Visibility="{Binding ContainedView, Converter={StaticResource ContainedViewVisibilityConverter}, ConverterParameter='Profile'}">
                            <controls:Profile x:Name="Profile"/>
                        </DockPanel>
                        
                        <DockPanel Visibility="{Binding ContainedView, Converter={StaticResource ContainedViewVisibilityConverter}, ConverterParameter='Home'}">
                            <controls:Home x:Name="Home"/>
                        </DockPanel>

                        <DockPanel x:Name="LobbyContainer" Visibility="{Binding ContainedView, Converter={StaticResource ContainedViewVisibilityConverter}, ConverterParameter='Lobby'}">
                            <controls:Lobby x:Name="Lobby"/>
                        </DockPanel>

                    </Grid>
                    <!--Chat Drawer-->
                    <materialDesign:DrawerHost.RightDrawerContent>
                        <DockPanel
                            Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ActualWidth, Converter={StaticResource DivisionMathConverter}, ConverterParameter=3}"
                            x:Name="RightDrawerContent">
                            <Grid x:Name="MainWindowChatContainer">
                                <controls:Chat x:Name="ChatBox" IsWaiting="{Binding ElementName=PolyDraw, Path=DataContext.IsWaiting, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                        </DockPanel>
                    </materialDesign:DrawerHost.RightDrawerContent>

                    <!--Hamburger Menu Drawer-->
                    <materialDesign:DrawerHost.LeftDrawerContent>
                        <DockPanel>
                            <materialDesign:ColorZone DockPanel.Dock="Top" Mode="PrimaryLight" Padding="10">
                                <StackPanel Orientation="Vertical">
                                    <materialDesign:Card Height="100" Padding="5" Width="100" materialDesign:ShadowAssist.ShadowDepth="Depth3" HorizontalAlignment="Center">
                                        <Image Source="{Binding SessionInformations.User.Avatar}"/>
                                    </materialDesign:Card>
                                    <TextBlock Text="{Binding SessionInformations.User.Username}"
                                               HorizontalAlignment="Center"
                                               Style="{StaticResource MaterialDesignHeadline5TextBlock}" />
                                </StackPanel>
                            </materialDesign:ColorZone>
                            <ListView>
                                <ListViewItem MouseUp="HomeItem_OnMouseUp" Name="HomeItem" >
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="House" Height="15" Width="15" VerticalAlignment="Center"/>
                                        <TextBlock Text="{DynamicResource Home}"/>
                                    </StackPanel>
                                </ListViewItem>
                                <ListViewItem MouseUp="ProfileItem_OnMouseUp" Name="ProfileItem">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="UserCircle" Height="15" Width="15" VerticalAlignment="Center"/>
                                        <TextBlock Text="{DynamicResource MyProfile}"/>
                                    </StackPanel>
                                </ListViewItem>

                                
                                
                                <ListViewItem Name="LogoutItem" MouseUp="LogoutItem_OnMouseUp">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Foreground="Red" Kind="Power" Height="15" Width="15"
                                                                 VerticalAlignment="Center" />
                                        <TextBlock Foreground="Red" Text="{DynamicResource Logout}" />
                                    </StackPanel>
                                </ListViewItem>
                            </ListView>
                        </DockPanel>

                    </materialDesign:DrawerHost.LeftDrawerContent>

                </materialDesign:DrawerHost>
            </DockPanel>
            
            
            <!--Login screen-->
            <DockPanel
                Visibility="{Binding ElementName=MainDockPanel, Path=Visibility, Converter={StaticResource ToggleVisibilityConverter}}">
                <Button Click="ConfigButton_OnClick" Name="ConfigButton" Style="{StaticResource MaterialDesignFlatButton}" Width="100" Height="100" DockPanel.Dock="Top" HorizontalAlignment="Left">
                    <StackPanel Name="NetworkConfig" Visibility="Hidden">
                            <RadioButton Command="{Binding ChangeNetworkCommand}" CommandParameter="0" IsChecked="True" Name="ProdConfigButton" Content="Prod" />
                            <RadioButton Command="{Binding ChangeNetworkCommand}" CommandParameter="1" IsChecked="False" Name="DevConfigButton"  Content="Dev"/>
                            <RadioButton Command="{Binding ChangeNetworkCommand}" CommandParameter="2"  Content="Local"/>
                    </StackPanel>
                </Button>
                <controls:Login x:Name="LoginScreen"
                                IsWaiting="{Binding ElementName=PolyDraw, Path=DataContext.IsWaiting, UpdateSourceTrigger=PropertyChanged}" />
            </DockPanel>
        </Grid>
    </materialDesign:DialogHost>


</Window>